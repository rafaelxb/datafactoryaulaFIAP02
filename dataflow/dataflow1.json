{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ParquetAluguel",
						"type": "DatasetReference"
					},
					"name": "SourceAluguel"
				},
				{
					"dataset": {
						"referenceName": "ParquetTableCliente",
						"type": "DatasetReference"
					},
					"name": "SourceCliente"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ParquetAluguelCliente",
						"type": "DatasetReference"
					},
					"name": "SinkSaida"
				}
			],
			"transformations": [
				{
					"name": "JoinAluguelCliente"
				}
			],
			"script": "source(output(\n\t\taluguel_id as integer,\n\t\tdata_de_aluguel as timestamp,\n\t\tinventario_id as integer,\n\t\tcliente_id as integer,\n\t\tdata_de_devolucao as timestamp,\n\t\tfuncionario_id as byte,\n\t\tultima_atualizacao as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> SourceAluguel\nsource(output(\n\t\tcliente_id as integer,\n\t\tloja_id as byte,\n\t\tprimeiro_nome as string,\n\t\tultimo_nome as string,\n\t\temail as string,\n\t\tendereco_id as integer,\n\t\tativo as boolean,\n\t\tdata_criacao as timestamp,\n\t\tultima_atualizacao as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet') ~> SourceCliente\nSourceAluguel, SourceCliente join(SourceAluguel@cliente_id == SourceCliente@cliente_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinAluguelCliente\nJoinAluguelCliente sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'',\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkSaida"
		}
	}
}